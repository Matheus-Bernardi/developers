{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.1",
    "title": "Transfer",
    "description": "<h1> Transfer Api </h1>\n\nApi responsible for soliciting transfers between bank accounts (TED/TEF)\n\nTransfer Status\n\n<table>\n  <tr>\n    <td>Status</td>\n    <td>Description</td>\n    <td>Final Status</td>\n    <td>Notification Event Type</td>\n  </tr>\n  <tr>\n    <td>CREATED</td>\n    <td>Created Transfer</td>\n    <td></td>\n    <td>transfer_created</td>\n  </tr>\n  <tr>\n    <td>CONFIRMING</td>\n    <td>Transfer beeing verified with the client if it was requested by him</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>CONFIRMED</td>\n    <td>Transfer confirmed by the client</td>\n    <td></td>\n    <td>transfer_confirmed</td>\n  </tr>\n  <tr>\n    <td>NOT_CONFIRMED</td>\n    <td>Transfer denied by the client</td>\n    <td>Yes</td>\n    <td>transfer_not_confirmed</td>\n  </tr>\n  <tr>\n    <td>PROCESSING</td>\n    <td>Sending transfer to the integrator</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>PROCESSED</td>\n    <td>Transfer sent to the integrator</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>REJECTED</td>\n    <td>Transfer with missing or invalid data</td>\n    <td>Yes</td>\n    <td>transfer_rejected</td>\n  </tr>\n  <tr>\n    <td>ERROR</td>\n    <td>Failure to process transfer</td>\n    <td>Yes</td>\n    <td>transfer_error</td>\n  </tr>\n  <tr>\n    <td>DONE</td>\n    <td>Transfer confirmed by the integrator</td>\n    <td>Yes</td>\n    <td>transfer_done</td>\n  </tr>\n</table>\n\n\n<h2> Status Change Notitfication </h2>\n\nAs described in the status table, some statuses will fire a notification call to the owner of the transfer.\nTo receive this notifications, its necessary to request the registration of the service URL which will receive the notification object.\nThis object will be sent as an HTTP call with the POST method, of which the client must respond with a 200 status and within 5 seconds.\n\nNotification Call Scheme\n\nHeaders:\n```json\n  {\n    X-R4-Application: GUID // Application Unique Identifier\n    X-R4-Delivery: GUID // Attempt Unique Identifier\n    X-R4-Event: {event_type} // Event Type for the Notification (As describe in the Transfer Status Table)\n    User-Agent: R4-Hookshot\n  }\n```\n\nBody\n  ```json\n  {\n    \"object_kind\": \"{event_type}\", //Event Type for the Notification (As describe in the Transfer Status Table)\n    \"object_id\": \"GUID\", // Transfer Unique Identifier\n    \"application_id\": \"GUID\", // Application Unique Identifier\n    \"account_id\": \"GUID\" // Account Unique Identifier\n  }\n  ```\n"
  },
  "tags": [
    {
      "name": "transfer"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/transfer": {
      "post": {
        "summary": "Transfer",
        "operationId": "transfer",
        "description": "Request for transfer from a baas account to an external bank account",
        "tags": [
          "transfer"
        ],
        "requestBody": {
          "description": "Send Transfer payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transfer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transfer"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "$ref": "#/components/schemas/TransferStatus"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "description": "Request was unauthorized due to client missing some permissions",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Error"
                        },
                        {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "ACCESSING_ACCOUNT_WITHOUT_PERMISSION"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Error"
                        },
                        {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "MISSING_PRODUCT_PERMISSION"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer auth (https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "How many items to return at one time (max 100)",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "schemas": {
      "Transfer": {
        "type": "object",
        "required": [
          "id",
          "account_id",
          "value",
          "goal",
          "recipient"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "description": "Transfer Unique Identifier\nMust be sent by the client as an Globa Unique Identifier (http://guid.one/guid) as it will be used as identification for the transfer in all other routes\n",
            "example": "ad731b07-8863-4a9f-9d7b-a5a3c551378d"
          },
          "account_id": {
            "type": "string",
            "format": "guid",
            "description": "Sender account unique identifier",
            "example": "ad731b07-8863-4a9f-9d7b-a5a3c551378d"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "Value of the transfer",
            "example": 200.5
          },
          "goal": {
            "type": "number",
            "format": "integer",
            "description": "Goal code for the transfer",
            "example": 10
          },
          "recipient": {
            "type": "object",
            "description": "Recipient for the transfer",
            "required": [
              "name",
              "bank_code",
              "agency",
              "account",
              "account_digit",
              "account_type",
              "document_type",
              "document_number"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the recipient",
                "example": "John Doe"
              },
              "bank_code": {
                "type": "number",
                "description": "Bank Code",
                "example": 260
              },
              "agency": {
                "type": "number",
                "description": "Agency number with digit",
                "example": 1001
              },
              "account": {
                "type": "number",
                "description": "Account number without the digit",
                "example": 266305
              },
              "account_digit": {
                "type": "number",
                "description": "Account Digit",
                "example": 1
              },
              "account_type": {
                "type": "string",
                "description": "Account Type\n- `CHECKING_ACCOUNT`: Checking Account Type - `SAVINGS_ACCOUNT`: Savings Account Type\n",
                "enum": [
                  "CHECKING_ACCOUNT",
                  "SAVINGS_ACCOUNT"
                ]
              },
              "document_type": {
                "type": "string",
                "description": "Document Type\n- `CPF`: Individual Taxpayer's Registry - `CNPJ`: Corporate Taxpayer's Registry\n",
                "enum": [
                  "CPF",
                  "CNPJ"
                ]
              },
              "document_number": {
                "type": "number",
                "description": "Document number with only its numbers",
                "example": 44769510071
              }
            }
          }
        }
      },
      "TransferStatus": {
        "type": "string",
        "enum": [
          "CREATED",
          "CONFIRMING",
          "CONFIRMED",
          "NOT_CONFIRMED",
          "PROCESSING",
          "PROCESSED",
          "REJECTED",
          "ERROR",
          "DONE"
        ]
      },
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnexpectedError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "SERVER_ERROR"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "NullResponse": {
        "description": "Null response"
      },
      "BadRequest": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "required": [
                    "name",
                    "details"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "VALIDATION_FAILED"
                      ]
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Message with the description of the Error"
                          },
                          "path": {
                            "type": "array",
                            "description": "Ordered array where each element is the accessor to the value where the error happened."
                          },
                          "type": {
                            "type": "string",
                            "description": "The error type"
                          },
                          "content": {
                            "type": "object",
                            "description": "Object containing the context for the error"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  }
}
