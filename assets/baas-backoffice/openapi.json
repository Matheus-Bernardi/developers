{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.1",
    "title": "BaaS Backoffice",
    "description": "BaaS Backoffice\n\nApi responsible for managing backoffice operations, reports, etc.\n\n## Internal Operation Status\n\n| Status | Description | Final Status | Notification Event Type |\n| ------ | ----------- | ------------ | ----------------------  |\n| CREATED       | Operation created | | |\n| CONFIRMING    | Operation begin verified with the client if it was requested by him | | |\n| CONFIRMED     | Operation confirmed by the client | | |\n| NOT_CONFIRMED | Operation denied by the client | Yes | backoffice_internal_operation_not_confirmed |\n| PROCESSING    | Processing bank operation | | |\n| REJECTED      | Operation rejected due internal validation | Yes | backoffice_internal_operation_rejected |\n| ERROR         | Failure to process | Yes | backoffice_internal_operation_error | |\n| DONE          | Operation completed successfully | Yes | backoffice_internal_operation_done |\n\n## Internal Operation Confirmation Call\n\nTo receive the confirmation, its necessary the previous registration of the client url.\n  This object will be sent as an HTTP call with the POST method, of which the client must respond with a 202 status and within 10 seconds.\n\n**Internal Operation Confirmation Call Scheme**\n\n  Headers:\n  ```json\n  {\n    X-R4-Application: GUID // Application Unique Identifier\n    X-R4-Delivery: GUID // Attempt Unique Identifier\n    X-R4-Event: internal_operation_confirmation\n    User-Agent: R4-Hookshot\n  }\n  ```\n  Body\n  ```json\n  {\n    \"object_kind\": \"internal_operation_confirmation\",\n    \"object_id\": \"GUID\", // Internal Operation Unique Identifier\n    \"application_id\": \"GUID\", // Application Unique Identifier\n    \"account_id\": \"GUID\", // Account Unique Identifier\n    \"account_number\": 1234567,\n    \"account_digit\": 7,\n    \"agency_number\": 1,\n    \"value\": 10.12,\n    \"history_code\": \"PAYROLL_LOAN_RELEASE_CREDIT\"\n  }\n  ```\n\n## Internal Operation Status Change Notification\n\nSome statuses changes will fire a notification call to the client.\n\nTo receive this notifications, its necessary to request the registration of the service URL which will receive the notification object.\n\nThis object will be sent as a HTTP call with the POST method, of which the client must respond with a 200 status.\n\n| Event Type          | Internal Operation Status     |\n|-------------------- | -------------- |\n| `backoffice_internal_operation_not_confirmed` | NOT_CONFIRMED |\n| `backoffice_internal_operation_rejected` | REJECTED |\n| `backoffice_internal_operation_error` | ERROR |\n| `backoffice_internal_operation_done` | DONE |\n\n### Notification Call Scheme\n\n#### *Header*\n```json\n{\n  X-R4-Application: GUID, // Application Unique Identifier\n  X-R4-Delivery: GUID, // Attempt Unique Identifier\n  X-R4-Event: {event_type}, // Event Type for the Notification (as described in Event Type table)\n  User-Agent: R4-Hookshot\n}\n```\n\n#### *Body*\n```\n{\n  \"object_kind\": \"{event_type}\", // Event Type for the Notification (as described in Event Type table)\n  \"object_id\": \"GUID\", // Operation Unique Identifier\n  \"account_id\": \"GUID\" // Account Unique Identifier\n  \"application_id\": \"GUID\" // Application Unique Identifier\n}\n```\n"
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://develop.r4digital.cloud/backoffice"
    },
    {
      "description": "Production",
      "url": "https://api.r4digital.cloud/backoffice"
    }
  ],
  "tags": [
    {
      "name": "BaaS Backoffice"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/status": {
      "get": {
        "tags": [
          "BaaS Backoffice"
        ],
        "summary": "API Health Check",
        "description": "API Health Check",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Not Found",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "NOT_FOUND",
                          "enum": [
                            "NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Unable to found the requested account"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/in32/{year}/{month}": {
      "get": {
        "tags": [
          "IN32 File"
        ],
        "summary": "Get in32 File",
        "description": "IN32 Report",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "schema": {
              "type": "integer",
              "minLength": 4,
              "maxLength": 4,
              "example": 2022
            },
            "required": true
          },
          {
            "in": "path",
            "name": "month",
            "schema": {
              "type": "integer",
              "minLength": 1,
              "maxLength": 2,
              "example": 5
            },
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": "Jos\u00e9 Silva"
            }
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "example": "josesilva@mail.com"
            }
          },
          {
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string",
              "example": "11971625362"
            }
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string",
              "enum": [
                "INFORM",
                "ADJUSTMENT"
              ],
              "example": "INFORM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "in32 File",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DtArquivo": {
                      "type": "string",
                      "example": "2022-06-13",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "Ano": {
                      "type": "integer",
                      "example": 2022,
                      "xml": {
                        "attribute": true
                      }
                    },
                    "Mes": {
                      "type": "string",
                      "example": "05",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "ISPB": {
                      "type": "integer",
                      "example": 12548,
                      "xml": {
                        "attribute": true
                      }
                    },
                    "NomeResp": {
                      "type": "string",
                      "example": "Jos\u00e9 Silva",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "EmailResp": {
                      "type": "string",
                      "example": "josesilva@mail.com.br",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "TelResp": {
                      "type": "string",
                      "example": 5551985856554,
                      "xml": {
                        "attribute": true
                      }
                    },
                    "TipoEnvio": {
                      "type": "string",
                      "enum": [
                        "I (INFORM)",
                        "S (ADJUSTMENT)"
                      ],
                      "example": "I",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "Transacoes": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "Transacao": {
                            "type": "object",
                            "properties": {
                              "QtdTransacoes": {
                                "type": "integer"
                              },
                              "ValorTransacoes": {
                                "type": "number"
                              },
                              "ValorEspecie": {
                                "type": "number"
                              },
                              "DetalhamentoTransacoes": {
                                "type": "integer"
                              },
                              "FinalidadeTransacoes": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Devolucoes": {
                      "type": "object",
                      "properties": {
                        "QtdDevolucoes": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "ValorDevolucoes": {
                          "type": "number",
                          "xml": {
                            "attribute": true
                          }
                        }
                      }
                    },
                    "BloqueiosCautelares": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "BloqueioCautelar": {
                            "type": "object",
                            "properties": {
                              "QtdeBloqCaut": {
                                "type": "integer"
                              },
                              "ValorBloqCaut": {
                                "type": "number"
                              },
                              "DetalhamentoTransacoesBloqCaut": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Receitas": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "Receita": {
                            "type": "object",
                            "properties": {
                              "ValorReceita": {
                                "type": "number"
                              },
                              "FonteReceita": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TemposTransacoes": {
                      "type": "object",
                      "properties": {
                        "Perc50TempoExpUsuarioLiqSPI": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "Perc99TempoExpUsuarioLiqSPI": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "Perc50TempoExpUsuarioLiqForaSPI": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "Perc99TempoExpUsuarioLiqForaSPI": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "TempoMaxBloqueioCautelar": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        }
                      }
                    },
                    "TemposDict": {
                      "type": "object",
                      "properties": {
                        "Perc99TempoUsuarioConsulta": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "PercTempoEnvioRegistro": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "PercTempoExpUsuarioRegistro": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "PercTempoExpUsuarioExclusao": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "PercTempoNotificacaoPortabilidade": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "PercTempoEnvioPortabilidade": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        }
                      }
                    },
                    "ConsultasDict": {
                      "type": "object",
                      "properties": {
                        "QtdConsultas": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        }
                      }
                    },
                    "Disponibilidade": {
                      "type": "object",
                      "properties": {
                        "IndiceDisponibilidade": {
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "APIX001"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid request data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "VALIDATION_FAILED"
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request data."
                        },
                        "details": {
                          "type": "array",
                          "title": "Error details",
                          "description": "Informs error details",
                          "example": "Invalid request data."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct, ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProduct": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  },
                  "Example 2 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 3 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 4 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal-operation": {
      "post": {
        "tags": [
          "Internal Operation"
        ],
        "summary": "Create an internal operation in specific account",
        "description": "Allows to create an internal banking operation in specific account.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id from operation movement",
                    "type": "string",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  },
                  "account_number": {
                    "description": "Account number",
                    "type": "number",
                    "example": 1234567
                  },
                  "account_digit": {
                    "description": "Account digit",
                    "type": "number",
                    "example": 7
                  },
                  "agency_number": {
                    "description": "Agency number from account",
                    "type": "number",
                    "example": 1
                  },
                  "value": {
                    "description": "Operation value",
                    "type": "number",
                    "example": 10.12
                  },
                  "history_code": {
                    "description": "The operation history code",
                    "type": "string",
                    "enum": [
                      "PAYROLL_LOAN_RELEASE_CREDIT"
                    ],
                    "example": "PAYROLL_LOAN_RELEASE_CREDIT"
                  }
                },
                "required": [
                  "id",
                  "account_number",
                  "account_digit",
                  "agency_number",
                  "value",
                  "history_code"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Internal Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Id from operation movement",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "account_id": {
                      "description": "Id from account",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "application_id": {
                      "description": "Id from application",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "status": {
                      "description": "Operation status",
                      "type": "string",
                      "example": "CREATED",
                      "enum": [
                        "CREATED",
                        "CONFIRMING",
                        "NOT_CONFIRMED",
                        "CONFIRMED",
                        "PROCESSING",
                        "DONE",
                        "ERROR",
                        "REJECTED"
                      ]
                    },
                    "value": {
                      "description": "Operation value",
                      "type": "number",
                      "example": 10.12
                    },
                    "history_code": {
                      "description": "The operation history code",
                      "type": "string",
                      "enum": [
                        "PAYROLL_LOAN_RELEASE_CREDIT"
                      ],
                      "example": "PAYROLL_LOAN_RELEASE_CREDIT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid request data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "VALIDATION_FAILED"
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request data."
                        },
                        "details": {
                          "type": "array",
                          "title": "Error details",
                          "description": "Informs error details",
                          "example": "Invalid request data."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct, ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProduct": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  },
                  "Example 2 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 3 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 4 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Internal Operation already exists",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "Internal Operation already exists",
                          "enum": [
                            "INTERNAL_OPERATION_ALREADY_EXISTS"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Internal Operation already exists"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "409"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InternalOperationAlreadyExists": {
                    "value": {
                      "code": "INTERNAL_OPERATION_ALREADY_EXISTS",
                      "message": "Internal Operation already exists."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal-operation/{id}": {
      "get": {
        "tags": [
          "Internal Operation"
        ],
        "summary": "Get an operation",
        "description": "Return an operation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Unique identifier of the internal operation.",
              "format": "uuid-v4",
              "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Internal operation returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of returned operation.",
                  "required": [
                    "id",
                    "application_id",
                    "value",
                    "history_code",
                    "status",
                    "created_at",
                    "updated_at",
                    "occurrences"
                  ],
                  "properties": {
                    "id": {
                      "description": "Id from operation movement",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "account_id": {
                      "description": "Id from account",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "application_id": {
                      "description": "Id from application",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "statement_id": {
                      "description": "Id from statement",
                      "type": "string",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    },
                    "status": {
                      "description": "Operation status",
                      "type": "string",
                      "example": "CREATED"
                    },
                    "value": {
                      "description": "Operation value",
                      "type": "number",
                      "example": 10.12
                    },
                    "history_code": {
                      "description": "The operation history code",
                      "type": "string",
                      "enum": [
                        "PAYROLL_LOAN_RELEASE_CREDIT"
                      ],
                      "example": "PAYROLL_LOAN_RELEASE_CREDIT"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The operation's created at",
                      "example": "2022-01-13T13:53:01.463Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The operation's updated at",
                      "example": "2022-01-13T13:53:01.463Z"
                    },
                    "occurrences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Occurrences from operation",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "Status from occurrence",
                            "enum": [
                              "CREATED",
                              "NOT_CONFIRMED",
                              "CONFIRMED",
                              "DONE",
                              "ERROR",
                              "REJECTED"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "description": "The operation's occurrence created at",
                            "example": "2022-01-13T13:53:01.463Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid request data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "VALIDATION_FAILED"
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request data."
                        },
                        "details": {
                          "type": "array",
                          "title": "Error details",
                          "description": "Informs error details",
                          "example": "Invalid request data."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct, ProductDisabledError, ApplicationNotFound, ProfileNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PRODUCT_DISABLED",
                          "enum": [
                            "PRODUCT_DISABLED"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product is not enabled."
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PROFILE_NOT_FOUND",
                          "enum": [
                            "PROFILE_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Profile not found."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProduct": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  },
                  "Example 2 - ProductDisabledError": {
                    "value": {
                      "code": "PRODUCT_DISABLED",
                      "message": "Product is not enabled."
                    }
                  },
                  "Example 3 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 4 - ProfileNotFound": {
                    "value": {
                      "code": "PROFILE_NOT_FOUND",
                      "message": "Profile not found."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [OperationNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Operation Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "OPERATION_NOT_FOUND",
                          "enum": [
                            "OPERATION_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Operation not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - OperationNotFound": {
                    "value": {
                      "code": "OPERATION_NOT_FOUND",
                      "message": "Operation not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "Error status code",
                      "example": "500"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "description": "Bearer auth (https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."
      }
    }
  }
}
