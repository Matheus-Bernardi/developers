{
  "openapi": "3.0.2",
  "info": {
    "version": "0.0.1",
    "title": "Baas Profile",
    "description": "**Description**: Baas Profile\n"
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://api.dev.xpto.com"
    },
    {
      "description": "Production",
      "url": "https://api.xpto.com"
    }
  ],
  "tags": [
    {
      "name": "Profile"
    }
  ],
  "paths": {
    "/persons": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Create person",
        "description": "Create a person..",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Create Person.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "person",
                  "parent",
                  "address",
                  "profession"
                ],
                "properties": {
                  "person": {
                    "type": "object",
                    "required": [
                      "full_name",
                      "document_type",
                      "document_number",
                      "uf",
                      "city",
                      "marital_status",
                      "nationality",
                      "birth_date",
                      "politically_exposed",
                      "issuing_agency",
                      "document_issue_date"
                    ],
                    "description": "Account holder details.\n",
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "description": "Name from person.",
                        "example": "Jonh"
                      },
                      "document_type": {
                        "type": "string",
                        "description": "The Type of Document.",
                        "enum": [
                          "CPF",
                          "CNH"
                        ]
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The value of document.",
                        "example": "81893643085"
                      },
                      "uf": {
                        "type": "string",
                        "description": "The state of the document.",
                        "example": "SP"
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the document.",
                        "example": "S\u00e3o Paulo"
                      },
                      "issuing_agency": {
                        "type": "string",
                        "description": "Issuing agency from document.",
                        "example": "SSP"
                      },
                      "document_issue_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2000-01-01",
                        "description": "Issuing document date."
                      },
                      "marital_status": {
                        "type": "string",
                        "enum": [
                          "MARRIED",
                          "CONCUBINAGE",
                          "PARTIAL_COMMUNITY_PROPERTY_REGIME",
                          "FULL_COMMUNITY_PROPERTY_REGIME",
                          "DESQUITADO",
                          "DIVORCED",
                          "LEGAL_SEPARATION",
                          "SINGLE",
                          "PARTIAL_SEPARATION_OF_PROPERTY_REGIME",
                          "FULL_SEPARATION_OF_PROPERTY_REGIME",
                          "WIDOWED"
                        ]
                      },
                      "nationality": {
                        "type": "string",
                        "description": "The nationality of the person.",
                        "example": "BRASILEIRA"
                      },
                      "birth_date": {
                        "type": "string",
                        "description": "The birth date of the person.",
                        "format": "date",
                        "example": "2000-01-01"
                      },
                      "politically_exposed": {
                        "type": "boolean",
                        "description": "If the person is politically exposed."
                      }
                    }
                  },
                  "parent": {
                    "type": "object",
                    "required": [
                      "name",
                      "nationality",
                      "document_number",
                      "type"
                    ],
                    "description": "Parent account holder details.\n",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Marie"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "The nationality of the parent.",
                        "example": "Brasileiro"
                      },
                      "document_number": {
                        "type": "string",
                        "description": "The value of Document.",
                        "example": "81893643085"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "SPOUSE",
                          "GROUP",
                          "MOTHER",
                          "FATHER",
                          "PARTNERSHIP",
                          "PARTNERSHIP_BACEN"
                        ]
                      }
                    }
                  },
                  "address": {
                    "type": "object",
                    "required": [
                      "type",
                      "uf",
                      "city",
                      "district",
                      "zip_code",
                      "street_name",
                      "street_number",
                      "complement_description",
                      "ddd_number",
                      "phone_number",
                      "complete_phone_number",
                      "email_address"
                    ],
                    "description": "Address from holder details.\n",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "RESIDENTIAL",
                          "MAILING"
                        ]
                      },
                      "uf": {
                        "type": "string",
                        "description": "The state of the person.",
                        "example": "SP"
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the person.",
                        "example": "S\u00e3o Paulo"
                      },
                      "district": {
                        "type": "string",
                        "description": "The district of the person.",
                        "example": "Morumbi"
                      },
                      "zip_code": {
                        "type": "string",
                        "description": "The CEP of the person.",
                        "example": "05653-160"
                      },
                      "street_name": {
                        "type": "string",
                        "description": "The district of the person.",
                        "example": "Av. Padre Lebret"
                      },
                      "street_number": {
                        "type": "string",
                        "description": "The street number of the person.",
                        "example": "123"
                      },
                      "complement_description": {
                        "type": "string",
                        "description": "The complement description of the person.",
                        "example": "AP 321"
                      },
                      "ddd_number": {
                        "type": "string",
                        "description": "The DDD from phone of the person.",
                        "example": "21"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "The number from phone of the person.",
                        "example": "998877665"
                      },
                      "complete_phone_number": {
                        "type": "string",
                        "description": "The DDD + number from phone of the person.",
                        "example": "21998877665"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "The email from person.",
                        "example": "test@email.com"
                      }
                    }
                  },
                  "profession": {
                    "type": "object",
                    "required": [
                      "cbo_code",
                      "description",
                      "remuneration",
                      "company_name",
                      "company_document",
                      "occupation_type",
                      "admission_date"
                    ],
                    "description": "Profession from holder details.\n",
                    "properties": {
                      "cbo_code": {
                        "type": "string",
                        "description": "Code identifying of the job.",
                        "example": "084"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the job."
                      },
                      "remuneration": {
                        "type": "number",
                        "format": "double",
                        "description": "Remuneration of the job.",
                        "example": 1000
                      },
                      "company_name": {
                        "type": "string",
                        "description": "Name from company of the job.",
                        "example": "R4"
                      },
                      "company_document": {
                        "type": "string",
                        "description": "Document from company of the job.",
                        "example": "1000"
                      },
                      "occupation_type": {
                        "type": "string",
                        "description": "Type occupation from company of the job.",
                        "example": "TI"
                      },
                      "admission_date": {
                        "type": "string",
                        "description": "Admission date occupation of the job.",
                        "format": "date",
                        "example": "2000-01-01"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a person successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the person.",
                      "format": "uuid-v4",
                      "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [BadRequest].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Bad Request",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "BAD_REQUEST",
                          "enum": [
                            "BAD_REQUEST"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Invalid request params"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "400"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Error with types [Unauthorized].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Unauthorized",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "UNAUTHORIZED",
                              "enum": [
                                "UNAUTHORIZED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Unauthorized"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "401"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Error with types [Forbidden].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Forbidden",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "FORBIDDEN",
                              "enum": [
                                "FORBIDDEN"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Forbidden"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "403"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Error with types [Conflict].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Conflict",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "CONFLICT",
                              "enum": [
                                "CONFLICT"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "The request could not be completed due to a conflict with the current state of the target resource"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "409"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Internal Server Error",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INTERNAL_SERVER_ERROR",
                          "enum": [
                            "INTERNAL_SERVER_ERROR"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Unexpected error with our service"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "500"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "List of jobs",
        "description": "Returns a list of jobs. If no jobs are found, you can call the API tagged **OUTROS**.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Name from jobs",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "The numbers of jobs to return",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The page of jobs from search.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Jobs successfully found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "number",
                      "description": "Limit from get job.",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "description": "Page from get job.",
                      "example": 2
                    },
                    "count": {
                      "type": "number",
                      "description": "Number page from get job.",
                      "example": 1
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes the properties of a job.",
                        "properties": {
                          "cbo_code": {
                            "type": "string",
                            "description": "Code identifying of the job.",
                            "example": "084"
                          },
                          "abbreviation": {
                            "type": "string",
                            "description": "Name abbreviation of the job.",
                            "example": "PROGR.DE COMPUTADOR"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the job.",
                            "example": "PROGRAMADOR DE COMPUTADOR"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [Unauthorized].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Unauthorized",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "title": "Error code",
                              "description": "The type of error",
                              "example": "UNAUTHORIZED",
                              "enum": [
                                "UNAUTHORIZED"
                              ]
                            },
                            "message": {
                              "type": "string",
                              "title": "Error message",
                              "description": "Describes a message informing a reason for the error",
                              "example": "Unauthorized"
                            },
                            "status_code": {
                              "type": "number",
                              "description": "Error status code",
                              "example": "401"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Internal Server Error",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INTERNAL_SERVER_ERROR",
                          "enum": [
                            "INTERNAL_SERVER_ERROR"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Unexpected error with our service"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "500"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "To be defined",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "To be defined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Internal Server Error",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INTERNAL_SERVER_ERROR",
                          "enum": [
                            "INTERNAL_SERVER_ERROR"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Unexpected error with our service"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "500"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "description": "Bearer auth (https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."
      }
    }
  }
}
