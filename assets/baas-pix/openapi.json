{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "Baas Pix",
    "description": "**Description**: Api responsible to managing pix keys and pix transfers\n\n  <a name=\"key_kind\"></a>\n\n  ## Key kind\n\n  <table>\n    <tr>\n      <td>Kind</td>\n      <td>Description</td>\n    </tr>\n    <tr>\n      <td>`CELLPHONE`</td>\n      <td>Cellphone number.</td>\n    </tr>\n    <tr>\n      <td>`CPF`</td>\n      <td>CPF number.</td>\n    </tr>\n    <tr>\n      <td>`CNPJ`</td>\n      <td>CNPJ number.</td>\n    </tr>\n    <tr>\n      <td>`EMAIL`</td>\n      <td>E-mail address.</td>\n    </tr>\n    <tr>\n      <td>`VIRTUAL`</td>\n      <td>Random key.</td>\n    </tr>\n  </table>\n\n# Errors\nAccount Middleware uses [HTTP response status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) to indicate the success or failure of your API requests.\nIn general, there are three status code ranges you can expect:\n- `2xx` success status codes confirm that your request worked as expected\n- `4xx` error status codes indicate an error because of the information provided (e.g., a required parameter was not provided)\n- `5xx` error status codes are rare and indicate an error with R4's servers\n\n## HTTP Status code summary\nExtracted from [Stripe API codes](https://stripe.com/docs/api/errors)\n- `200 - OK` Everything worked as expected.\n- `400 - Bad Request` The request was unacceptable, often due to missing a required parameter.\n- `401 - Unauthorized` No valid API key provided.\n- `403 - Forbidden` The API key doesn't have permissions to perform the request.\n- `404 - Not Found` The requested resource doesn't exist.\n- `429 - Too Many Requests` Too many requests hit the API too quickly. We recommend an exponential backoff of your requests.\n- `500, 502, 503, 504 - Server Errors` Something went wrong on R4's end.\n## Error codes\nBelow is a list of possible error codes that can be returned:\n<table>\n  <tr>\n    <td>Code</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>`ACCOUNT_NOT_FOUND`</td>\n    <td>The account informed was not found.</td>\n  </tr>\n  <tr>\n    <td>`PARTNERS_NOT_FOUND`</td>\n    <td>Partners was not found.</td>\n  </tr>\n  <tr>\n    <td>`INVALID_CELLPHONE`</td>\n    <td>The provided cellphone is not valid.</td>\n  </tr>\n  <tr>\n    <td>`INVALID_CNPJ`</td>\n    <td>The provided CNPJ is not valid.</td>\n  </tr>\n  <tr>\n    <td>`INVALID_CPF`</td>\n    <td>The provided CPF is not valid.</td>\n  </tr>\n  <tr>\n    <td>`INVALID_EMAIL`</td>\n    <td>The provided email is not valid.</td>\n  </tr>\n</table>\n"
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://api.dev.xpto.com"
    },
    {
      "description": "Production",
      "url": "https://api.xpto.com"
    }
  ],
  "tags": [
    {
      "name": "Keys"
    }
  ],
  "paths": {
    "/pix/keys": {
      "post": {
        "tags": [
          "Keys"
        ],
        "summary": "Create a new key",
        "description": "Returns a created key",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Describes the properties of pix key.",
                "required": [
                  "kind",
                  "account_id"
                ],
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "Kind of key. [See definitions here](#key_kind).\n",
                    "enum": [
                      "CELLPHONE",
                      "CPF",
                      "CNPJ",
                      "EMAIL",
                      "VIRTUAL"
                    ],
                    "example": "CELLPHONE"
                  },
                  "key": {
                    "type": "string",
                    "description": "Value of pix key.",
                    "example": "51981706022"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of pix key.",
                  "required": [
                    "key",
                    "created_at",
                    "ownership_start_date",
                    "claim_opening_date"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Value of pix key.",
                      "example": "51981706022"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Pix key creation date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "ownership_start_date": {
                      "type": "string",
                      "description": "Ownership start date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "claim_opening_date": {
                      "type": "string",
                      "description": "Claim opening date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [InvalidCPF, InvalidCNPJ, InvalidCellPhone, InvalidEmail, KeyAlreadyExists, InvalidKey, InvalidData].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid CPF",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_CPF",
                          "enum": [
                            "INVALID_CPF"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided CPF is not valid."
                        }
                      }
                    },
                    {
                      "title": "Invalid CNPJ",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_CNPJ",
                          "enum": [
                            "INVALID_CNPJ"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided CNPJ is not valid."
                        }
                      }
                    },
                    {
                      "title": "Invalid Cellphone",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_CELLPHONE",
                          "enum": [
                            "INVALID_CELLPHONE"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided cellphone is not valid."
                        }
                      }
                    },
                    {
                      "title": "Invalid Email",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_EMAIL",
                          "enum": [
                            "INVALID_EMAIL"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The provided email is not valid."
                        }
                      }
                    },
                    {
                      "title": "Key already exist",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_ALREADY_EXISTS",
                          "enum": [
                            "KEY_ALREADY_EXISTS"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "There is already a bond for this key with the same participant and owner"
                        }
                      }
                    },
                    {
                      "title": "Invalid key",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_KEY",
                          "enum": [
                            "INVALID_KEY"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "There are invalid fields."
                        }
                      }
                    },
                    {
                      "title": "Invalid data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_DATA",
                          "enum": [
                            "INVALID_DATA"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The data provided has an invalid format"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InvalidCPFError": {
                    "value": {
                      "code": "INVALID_CPF",
                      "message": "The provided CPF is not valid."
                    }
                  },
                  "Example 2 - InvalidCNPJError": {
                    "value": {
                      "code": "INVALID_CNPJ",
                      "message": "The provided CNPJ is not valid."
                    }
                  },
                  "Example 3 - InvalidCellPhoneError": {
                    "value": {
                      "code": "INVALID_CELLPHONE",
                      "message": "The provided cellphone is not valid."
                    }
                  },
                  "Example 4 - InvalidCPFError": {
                    "value": {
                      "code": "INVALID_EMAIL",
                      "message": "The provided email is not valid."
                    }
                  },
                  "Example 5 - KeyAlreadyExists": {
                    "value": {
                      "code": "KEY_ALREADY_EXISTS",
                      "message": "There is already a bond for this key with the same participant and owner"
                    }
                  },
                  "Example 6 - EntryInvalidError": {
                    "value": {
                      "code": "INVALID_KEY",
                      "message": "There are invalid fields"
                    }
                  },
                  "Example 7 - InvalidDataError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, ApplicationProductNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFounderror": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found"
                    }
                  },
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Keys"
        ],
        "summary": "List keys",
        "description": "Returns a list of keys belonging to the account",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "account_id",
            "required": true,
            "schema": {
              "description": "Unique identifier of the account.",
              "type": "string",
              "format": "uuid-v4",
              "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully list keys.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Describes the properties of pix key.",
                    "required": [
                      "key",
                      "name",
                      "created_at",
                      "ownership_start_date"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Value of pix key.",
                        "example": "51981706022"
                      },
                      "name": {
                        "type": "string",
                        "description": "Trade Name of pix key owner.",
                        "example": "John Doe"
                      },
                      "nickname": {
                        "type": "string",
                        "description": "Name of pix key owner.",
                        "example": "John"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Pix key creation date.",
                        "example": "2021-10-31T12:56:23.123Z"
                      },
                      "ownership_start_date": {
                        "type": "string",
                        "description": "Ownership start date.",
                        "example": "2021-10-31T12:56:23.123Z"
                      },
                      "claim_opening_date": {
                        "type": "string",
                        "description": "Claim opening date.",
                        "example": "2021-10-31T12:56:23.123Z"
                      },
                      "claim": {
                        "type": "string",
                        "enum": [
                          "OWNERSHIP",
                          "PORTABILITY"
                        ],
                        "description": "Claim reason.",
                        "example": "PORTABILITY"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [InvalidDataError].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_DATA",
                          "enum": [
                            "INVALID_DATA"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The data provided has an invalid format"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InvalidCPFError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [AccountNotFound, KeyNotFound, ApplicationNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Account Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "ACCOUNT_NOT_FOUND",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Account not found"
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Key not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    },
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - AccountNotFound": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Account not found"
                    }
                  },
                  "Example 2 - KeyNotFound": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The provided key is not found or does not exist"
                    }
                  },
                  "Example 3 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix/keys/{key}": {
      "delete": {
        "tags": [
          "Keys"
        ],
        "summary": "Delete a key",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "A key to be deleted"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Describes the properties to remove a key.",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Reason to remove a key.\n",
                    "enum": [
                      "CUSTOMER_REQUEST",
                      "FRAUD",
                      "RECONCILIATION"
                    ],
                    "example": "CUSTOMER_REQUEST"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successfully deleted key."
          },
          "400": {
            "description": "Error with types [InvalidDataError, InvalidKey].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid data",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_DATA",
                          "enum": [
                            "INVALID_DATA"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The data provided has an invalid format"
                        }
                      }
                    },
                    {
                      "title": "Invalid key",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_KEY",
                          "enum": [
                            "INVALID_KEY"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "There are invalid fields."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InvalidCPFError": {
                    "value": {
                      "code": "INVALID_DATA",
                      "message": "The data provided has an invalid format"
                    }
                  },
                  "Example 2 - EntryInvalidError": {
                    "value": {
                      "code": "INVALID_KEY",
                      "message": "There are invalid fields"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, KeyNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Key not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - KeyNotFound": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The provided key is not found or does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Keys"
        ],
        "summary": "Get an Pix Key",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The key to be find."
          },
          {
            "in": "query",
            "name": "account_id",
            "schema": {
              "type": "string",
              "format": "uuid-v4"
            },
            "description": "Unique account id",
            "required": true,
            "example": "60863781-58ce-4665-939e-45e895fd40eb"
          }
        ],
        "description": "Get Pix Key data",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pix Key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of pix key",
                  "required": [
                    "reason"
                  ],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Kind of the key.",
                      "enum": [
                        "CELLPHONE",
                        "CPF",
                        "CNPJ",
                        "EMAIL",
                        "VIRTUAL"
                      ],
                      "example": "CELLPHONE"
                    },
                    "key": {
                      "type": "string",
                      "description": "Value of pix key.",
                      "example": "+5551981706022"
                    },
                    "agency_number": {
                      "type": "number",
                      "description": "Owner's agency number"
                    },
                    "account_type": {
                      "type": "string",
                      "description": "Owner's account type",
                      "enum": [
                        "CHECKING_ACCOUNT",
                        "SALARY_ACCOUNT",
                        "SAVINGS_ACCOUNT",
                        "PAYMENT_ACCOUNT"
                      ]
                    },
                    "account_number": {
                      "type": "number",
                      "description": "Owner's account number"
                    },
                    "account_digit": {
                      "type": "number",
                      "description": "Owner's account digit"
                    },
                    "account_opening_date": {
                      "type": "string",
                      "description": "Owner's account opening date"
                    },
                    "document_type": {
                      "type": "string",
                      "description": "Owner's document type",
                      "enum": [
                        "CPF",
                        "CNPJ"
                      ],
                      "example": "CPF"
                    },
                    "document_number": {
                      "type": "string",
                      "description": "Owner's document number",
                      "example": "31851631097"
                    },
                    "name": {
                      "type": "string",
                      "description": "Owner's name"
                    },
                    "nickname": {
                      "type": "string",
                      "description": "Owner's nickname"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date and time of inclusion",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "ownership_start_date": {
                      "type": "number",
                      "description": "Ownership start date",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "claim_opening_date": {
                      "type": "number",
                      "description": "When informed, it indicates the date and time of the start of the process of claim or portability of the key.",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "end_to_end_id": {
                      "type": "string",
                      "description": "Unique identifier of the payment transaction"
                    },
                    "statistics": {
                      "type": "object",
                      "description": "Statistical data related to key, owner or account",
                      "properties": {
                        "anti_fraud_updated_at": {
                          "type": "string",
                          "description": "Latest anti-fraud update"
                        },
                        "counters": {
                          "type": "array",
                          "description": "Event counter",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "description": "Accountant type",
                                "enum": [
                                  "TRANSACTIONS",
                                  "FRAUD_REPORT",
                                  "FRAUD_CONFIRMATION"
                                ]
                              },
                              "aggregator": {
                                "type": "string",
                                "description": "Counter aggregation type",
                                "enum": [
                                  "KEY",
                                  "OWNER",
                                  "ACCOUNT"
                                ]
                              },
                              "d3": {
                                "type": "number",
                                "description": "Value for the last 3 days"
                              },
                              "d30": {
                                "type": "number",
                                "description": "Value for the last 30 days"
                              },
                              "m6": {
                                "type": "number",
                                "description": "Value for the last 6 months"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "kind": "CELLPHONE",
                      "key": "+5547989991111",
                      "agency_number": 1234,
                      "account_type": "CHECKING_ACCOUNT",
                      "account_number": 1234,
                      "account_digit": 1,
                      "account_opening_date": "2021-10-31T12:56:23.123Z",
                      "document_type": "CPF",
                      "document_number": "13700618034",
                      "name": "Owner Name",
                      "nickname": "Owner Nickname",
                      "created_at": "2021-10-31T12:56:23.123Z",
                      "ownership_start_date": "2021-10-31T12:56:23.123Z",
                      "claim_opening_date": "2021-10-31T12:56:23.123Z",
                      "end_to_end_id": "77e94883474e4dfd867624f222aabc5b",
                      "statistics": {
                        "anti_fraud_updated_at": "2021-10-31T12:56:23.123Z",
                        "counters": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, KeyNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Key not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - KeyNotFound": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "Key not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partners": {
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Get a list of partners",
        "description": "Return a list of PSP partners registered on service provider",
        "responses": {
          "200": {
            "description": "A list of PSP partners",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes the properties of partner",
                        "required": [
                          "ispb",
                          "nickname",
                          "kind",
                          "status"
                        ],
                        "properties": {
                          "ispb": {
                            "type": "number",
                            "description": "ISPB of partner",
                            "example": 11476673
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of partner.",
                            "example": "R4 Digital"
                          },
                          "nickname": {
                            "type": "string",
                            "description": "nickname of partner",
                            "example": "R4"
                          },
                          "kind": {
                            "type": "string",
                            "description": "Kind of partner",
                            "enum": [
                              "DIRECT,",
                              "INDIRECT,"
                            ],
                            "example": "DIRECT"
                          },
                          "modality": {
                            "type": "string",
                            "description": "Modality of partner.",
                            "enum": [
                              "TRANSACTION_ACCOUNT_PROVIDER",
                              "GOVERNMENT_ENTITY",
                              "SPECIAL_LIQUIDATOR"
                            ],
                            "example": "GOVERNMENT_ENTITY"
                          },
                          "started_at": {
                            "type": "string",
                            "format": "Date",
                            "description": "Date and time of initial partner registration",
                            "example": "2021-10-31T12:56:23.123Z"
                          },
                          "ended_at": {
                            "type": "string",
                            "description": "Date and time of end partner registration",
                            "example": "2021-10-31T12:56:23.123Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of partner.",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "WAITING_ACTIVATION",
                              "ACTIVATION_FAILED"
                            ],
                            "example": "ACTIVE"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, PartnersNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Partners Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PARTNERS_NOT_FOUND",
                          "enum": [
                            "PARTNERS_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Partners not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - PartnersNotFound": {
                    "value": {
                      "code": "PARTNERS_NOT_FOUND",
                      "message": "Partners not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partners/{ispb}": {
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Get specific PSP partner",
        "description": "Return a specific PSP partner registered on service provider",
        "parameters": [
          {
            "in": "path",
            "name": "ispb",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Partner ISPB"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of PSP partners",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of partner",
                  "required": [
                    "ispb",
                    "nickname",
                    "kind",
                    "status"
                  ],
                  "properties": {
                    "ispb": {
                      "type": "number",
                      "description": "ISPB of partner",
                      "example": 11476673
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of partner.",
                      "example": "R4 Digital"
                    },
                    "nickname": {
                      "type": "string",
                      "description": "nickname of partner",
                      "example": "R4"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind of partner",
                      "enum": [
                        "DIRECT,",
                        "INDIRECT,"
                      ],
                      "example": "DIRECT"
                    },
                    "modality": {
                      "type": "string",
                      "description": "Modality of partner.",
                      "enum": [
                        "TRANSACTION_ACCOUNT_PROVIDER",
                        "GOVERNMENT_ENTITY",
                        "SPECIAL_LIQUIDATOR"
                      ],
                      "example": "GOVERNMENT_ENTITY"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "Date",
                      "description": "Date and time of initial partner registration",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "ended_at": {
                      "type": "string",
                      "description": "Date and time of end partner registration",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of partner.",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "WAITING_ACTIVATION",
                        "ACTIVATION_FAILED"
                      ],
                      "example": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, KeyNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Partners Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "PARTNERS_NOT_FOUND",
                          "enum": [
                            "PARTNERS_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Partners not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - PartnersNotFound": {
                    "value": {
                      "code": "PARTNERS_NOT_FOUND",
                      "message": "Partners not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix/claims": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Create a claim",
        "description": "It Returns the created claim",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Describes the properties of claim.",
                "required": [
                  "kind",
                  "account_id"
                ],
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "Kind of key. [See definitions here](#key_kind).\n",
                    "enum": [
                      "CELLPHONE",
                      "CPF",
                      "CNPJ",
                      "EMAIL",
                      "VIRTUAL"
                    ],
                    "example": "CELLPHONE"
                  },
                  "key": {
                    "type": "string",
                    "description": "Value of pix key.",
                    "example": "51981706022"
                  },
                  "claim": {
                    "type": "string",
                    "description": "Key claim.\n",
                    "enum": [
                      "PORTABILITY",
                      "OWNERSHIP"
                    ],
                    "example": "PORTABILITY"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Unique identifier of the account.",
                    "format": "uuid-v4",
                    "example": "6d814c28-fe73-443c-bfe0-48d518aa32fa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A new claim",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of claim.",
                  "required": [
                    "claim_id",
                    "resolved_at",
                    "updated_at"
                  ],
                  "properties": {
                    "claim_id": {
                      "type": "string",
                      "description": "Claim id.",
                      "example": "d630c863-bfa4-4546-ada0-3b501c3a1572"
                    },
                    "confirmation_reason": {
                      "type": "string",
                      "description": "Confirmation reason",
                      "enum": [
                        "CUSTOMER_REQUEST",
                        "ENDING_ACCOUNT",
                        "FRAUD",
                        "ANSWER_DEFAULT"
                      ],
                      "example": "CUSTOMER_REQUEST"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of claim",
                      "example": "OPEN",
                      "enum": [
                        "OPEN",
                        "WAITING_RESOLUTION",
                        "CONFIRMED",
                        "CANCELED",
                        "COMPLETED"
                      ]
                    },
                    "cancellation_reason": {
                      "type": "string",
                      "description": "Cancellation reason",
                      "enum": [
                        "CUSTOMER_REQUEST",
                        "ENDING_ACCOUNT",
                        "FRAUD",
                        "ANSWER_DEFAULT",
                        "RECONCILIATION"
                      ],
                      "example": "CUSTOMER_REQUEST"
                    },
                    "cancelled_by": {
                      "type": "string",
                      "description": "The canlatio origin",
                      "enum": [
                        "GRANTOR",
                        "CLAIMER"
                      ],
                      "example": "CLAIMER"
                    },
                    "resolved_at": {
                      "type": "string",
                      "description": "Claim resolution date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "concluded_at": {
                      "type": "string",
                      "description": "Claim conclusion date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Claim update date.",
                      "example": "2021-10-31T12:56:23.123Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Invalid Claim",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INVALID_CLAIM",
                          "enum": [
                            "INVALID_CLAIM"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "There are an invalid field at creation of the claim"
                        }
                      }
                    },
                    {
                      "title": "Inconsistent claim type",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "INCONSISTENT_CLAIM_TYPE",
                          "enum": [
                            "INCONSISTENT_CLAIM_TYPE"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "The requested claim type is inconsistent"
                        }
                      }
                    },
                    {
                      "title": "Claim already exists",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "CLAIM_ALREADY_EXIST_FOR_KEY",
                          "enum": [
                            "CLAIM_ALREADY_EXIST_FOR_KEY"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "There is some claim with status different of done or cancelled for the revindicated key"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - InvalidClaimError": {
                    "value": {
                      "code": "INVALID_CLAIM",
                      "message": "There are an invalid field at creation of the claim"
                    }
                  },
                  "Example 2 - InconsistentClaimTypeError": {
                    "value": {
                      "code": "INCONSISTENT_CLAIM_TYPE",
                      "message": "The requested claim type is inconsistent"
                    }
                  },
                  "Example 3 - InconsistentClaimTypeError": {
                    "value": {
                      "code": "CLAIM_ALREADY_EXIST_FOR_KEY",
                      "message": "There is some claim with status different of done or cancelled for the revindicated key"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get a list of claims",
        "description": "Get a list of claims for a specific account",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "account_id",
            "schema": {
              "type": "string",
              "format": "uuid-v4"
            },
            "description": "Unique account id",
            "required": true,
            "example": 1234
          },
          {
            "in": "query",
            "name": "grantor",
            "schema": {
              "type": "boolean"
            },
            "description": "Get list of claims that account is the grantor",
            "required": false,
            "example": false
          },
          {
            "in": "query",
            "name": "claimer",
            "schema": {
              "type": "boolean"
            },
            "description": "Get list of claims that account is the claimer",
            "required": false,
            "example": true
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "OPEN",
                "WAITING_RESOLUTION",
                "CONFIRMED",
                "CANCELED",
                "DONE"
              ]
            },
            "description": "Get only claims with specif status",
            "required": false,
            "example": "WAITING_RESOLUTION"
          },
          {
            "in": "query",
            "name": "claim_reason",
            "schema": {
              "type": "string",
              "enum": [
                "PORTABILITY",
                "OWNERSHIP"
              ]
            },
            "description": "Get only claims with specif reason",
            "required": false,
            "example": "PORTABILITY"
          },
          {
            "in": "query",
            "name": "updated_start",
            "schema": {
              "type": "string"
            },
            "description": "Restricts the query to a date equal to or greater than the one entered",
            "required": false,
            "example": "2020-01-10T11:30:17.001Z"
          },
          {
            "in": "query",
            "name": "updated_end",
            "schema": {
              "type": "string"
            },
            "description": "Restricts the query to a date equal to or less than the one entered",
            "required": false,
            "example": "2021-01-10T11:30:17.001Z"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            },
            "description": "Maximum number of records per page",
            "required": false,
            "example": 100
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "description": "Page number, if not informed the default will be 1",
            "required": false,
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get claims",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "pagination"
                  ],
                  "properties": {
                    "data": {
                      "required": [
                        "requested_at"
                      ],
                      "properties": {
                        "requested_at": {
                          "type": "string",
                          "example": "2021-01-10T11:30:17.001Z"
                        },
                        "claims": {
                          "type": "array",
                          "items": {
                            "required": [
                              "reason",
                              "participation_flow",
                              "key",
                              "kind",
                              "ispb",
                              "account_type",
                              "account_number",
                              "account_opening_date",
                              "document_type",
                              "document_number",
                              "ispb_grantor",
                              "claim_id",
                              "status",
                              "resolved_at",
                              "updated_at"
                            ],
                            "properties": {
                              "reason": {
                                "type": "string",
                                "description": "Claim reason type",
                                "example": "PORTABILITY",
                                "enum": [
                                  "PORTABILITY",
                                  "OWNERSHIP"
                                ]
                              },
                              "participation_flow": {
                                "type": "string",
                                "description": "Date and time of inclusion",
                                "example": "CLAIMER",
                                "enum": [
                                  "CLAIMER",
                                  "GRANTOR"
                                ]
                              },
                              "key": {
                                "type": "string",
                                "description": "Pix key identifier",
                                "example": "+5547989991111"
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind of the key",
                                "enum": [
                                  "CPF",
                                  "CNPJ",
                                  "EMAIL",
                                  "CELLPHONE"
                                ]
                              },
                              "ispb": {
                                "type": "number",
                                "description": "ISPB number",
                                "example": 11476673
                              },
                              "agency_number": {
                                "type": "number",
                                "description": "Owner's agency number",
                                "example": 1
                              },
                              "account_type": {
                                "type": "string",
                                "description": "Owner's account type",
                                "enum": [
                                  "CHECKING_ACCOUNT",
                                  "SALARY_ACCOUNT",
                                  "SAVINGS_ACCOUNT",
                                  "PAYMENT_ACCOUNT"
                                ]
                              },
                              "account_number": {
                                "type": "number",
                                "description": "Owner's account number",
                                "example": 531
                              },
                              "account_opening_date": {
                                "type": "number",
                                "description": "Account opening date",
                                "example": "2021-07-23T16:58:27.000Z"
                              },
                              "document_type": {
                                "type": "string",
                                "description": "Owner's document type",
                                "enum": [
                                  "CPF",
                                  "CNPJ"
                                ],
                                "example": "CPF"
                              },
                              "document_number": {
                                "type": "string",
                                "description": "Owner's document number",
                                "example": "39033905000"
                              },
                              "name": {
                                "type": "string",
                                "description": "Owner's name"
                              },
                              "nickname": {
                                "type": "string",
                                "description": "Owner's nickname"
                              },
                              "ispb_grantor": {
                                "type": "number",
                                "description": "ISPB grantor number",
                                "example": 114761213
                              },
                              "grantor": {
                                "type": "object",
                                "properties": {
                                  "agency_number": {
                                    "type": "number",
                                    "description": "Owner's agency number",
                                    "example": 32
                                  },
                                  "account_type": {
                                    "type": "string",
                                    "description": "Owner's account type",
                                    "enum": [
                                      "CHECKING_ACCOUNT",
                                      "SALARY_ACCOUNT",
                                      "SAVINGS_ACCOUNT",
                                      "PAYMENT_ACCOUNT"
                                    ]
                                  },
                                  "account_number": {
                                    "type": "number",
                                    "description": "Owner's account number",
                                    "example": 2314
                                  },
                                  "account_opening_date": {
                                    "type": "number",
                                    "description": "Account opening date",
                                    "example": "2021-07-23T16:58:27.000Z"
                                  },
                                  "document_type": {
                                    "type": "string",
                                    "description": "Owner's document type",
                                    "enum": [
                                      "CPF",
                                      "CNPJ"
                                    ],
                                    "example": "CPF"
                                  },
                                  "document_number": {
                                    "type": "string",
                                    "description": "Owner's document number",
                                    "example": "39033905000"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Owner's name",
                                    "example": "Name"
                                  },
                                  "nickname": {
                                    "type": "string",
                                    "description": "Owner's nickname",
                                    "example": "Nick Name"
                                  },
                                  "notified_at": {
                                    "type": "string",
                                    "description": "When grantor was notified.",
                                    "example": "2021-07-23T16:58:27.000Z"
                                  }
                                }
                              },
                              "claim_id": {
                                "type": "string",
                                "description": "Id of claim",
                                "example": "4af9af0f-4935-454e-b3ee-af5b9d85c914"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of claim",
                                "example": "OPEN",
                                "enum": [
                                  "OPEN",
                                  "WAITING_RESOLUTION",
                                  "CONFIRMED",
                                  "CANCELED",
                                  "DONE"
                                ]
                              },
                              "confirmation_reason": {
                                "type": "string",
                                "description": "Reason for confirmation",
                                "example": "CUSTOMER_REQUEST",
                                "enum": [
                                  "CUSTOMER_REQUEST",
                                  "ENDING_ACCOUNT",
                                  "FRAUD",
                                  "ANSWER_DEFAULT"
                                ]
                              },
                              "cancellation_reason": {
                                "type": "string",
                                "description": "Reason for cancellation",
                                "example": "FRAUD",
                                "enum": [
                                  "CUSTOMER_REQUEST",
                                  "ENDING_ACCOUNT",
                                  "FRAUD",
                                  "ANSWER_DEFAULT",
                                  "RECONCILIATION"
                                ]
                              },
                              "cancelled_by": {
                                "type": "string",
                                "description": "Canceled by",
                                "example": "GRANTOR",
                                "enum": [
                                  "GRANTOR",
                                  "CLAIMER"
                                ]
                              },
                              "resolved_at": {
                                "type": "string",
                                "description": "Claim resolved date",
                                "example": "2021-07-23T16:58:27.000Z"
                              },
                              "concluded_at": {
                                "type": "string",
                                "description": "Claim conclusion date;",
                                "example": "2021-07-23T16:58:27.000Z"
                              },
                              "updated_at": {
                                "type": "string",
                                "description": "Claim modified date",
                                "example": "2021-07-23T16:58:27.000Z"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "required": [
                        "total",
                        "page",
                        "limit",
                        "has_next_page",
                        "has_previous_page"
                      ],
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total of records found",
                          "example": 8
                        },
                        "page": {
                          "type": "number",
                          "description": "Actual page",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "Limit of records per page",
                          "example": 100
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "description": "Indicate if exists next pages",
                          "example": false
                        },
                        "has_previous_page": {
                          "type": "boolean",
                          "description": "Indicate if exists previous pages",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, KeyNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Key not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - KeyNotFound": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The provided key is not found or does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix/pending-claims": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "It returns a list of pending claims",
        "description": "It returns a list of pending claims",
        "parameters": [
          {
            "in": "query",
            "name": "agency_number",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The owner agency number"
          },
          {
            "in": "query",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The owner account number"
          },
          {
            "in": "query",
            "name": "account_digit",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The owner account digit"
          },
          {
            "in": "query",
            "name": "document_type",
            "schema": {
              "type": "string",
              "enum": [
                "CPF",
                "CNPJ"
              ]
            },
            "required": true,
            "description": "The owner document type"
          },
          {
            "in": "query",
            "name": "document_number",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "The owner document number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            },
            "description": "The register limit"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of key pending claims",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of claim.",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "claim": {
                            "type": "string",
                            "description": "Claim's type",
                            "enum": [
                              "PORTABILITY",
                              "OWNERSHIP"
                            ],
                            "example": "PORTABILITY"
                          },
                          "participation_flow": {
                            "type": "string",
                            "description": "Participation flow",
                            "enum": [
                              "CLAIMENT",
                              "GRANTOR"
                            ],
                            "example": "CLAIMENT"
                          },
                          "key": {
                            "type": "string",
                            "description": "Value of pix key.",
                            "example": "51981706022"
                          },
                          "kind": {
                            "type": "string",
                            "description": "Kind of key.",
                            "enum": [
                              "CELLPHONE",
                              "CPF",
                              "CNPJ",
                              "EMAIL",
                              "VIRTUAL"
                            ],
                            "example": "CPF"
                          },
                          "document_type": {
                            "type": "string",
                            "enum": [
                              "CPF",
                              "CNPJ"
                            ],
                            "description": "Owner's document type",
                            "example": "CPF"
                          },
                          "document_number": {
                            "type": "string",
                            "description": "Owner's document number",
                            "example": "31851631097"
                          },
                          "grantor": {
                            "type": "object",
                            "description": "Grantor's data",
                            "properties": {
                              "agency_number": {
                                "type": "number",
                                "description": "Grantor's agency number",
                                "example": 1
                              },
                              "account_number": {
                                "type": "number",
                                "description": "Grantor's account number",
                                "example": "12345"
                              },
                              "account_type": {
                                "type": "string",
                                "description": "Grantor's account type",
                                "enum": [
                                  "CHECKING_ACCOUNT",
                                  "SALARY_ACCOUNT",
                                  "SAVINGS_ACCOUNT",
                                  "PAYMENT_ACCOUNT"
                                ],
                                "example": "PAYMENT_ACCOUNT"
                              },
                              "document_type": {
                                "type": "string",
                                "enum": [
                                  "CPF",
                                  "CNPJ"
                                ],
                                "description": "Grantor's document type",
                                "example": "CPF"
                              },
                              "document_number": {
                                "type": "string",
                                "description": "Grantor's document number",
                                "example": "31851631097"
                              },
                              "name": {
                                "type": "string",
                                "description": "Grantor's name",
                                "example": "Test"
                              },
                              "nickname": {
                                "type": "string",
                                "description": "Grantor's nickname",
                                "example": "Test"
                              }
                            }
                          },
                          "claim_id": {
                            "type": "string",
                            "description": "Claim id",
                            "example": "69F963C6-7487-4363-9406-A1DE2A9636D4"
                          },
                          "status": {
                            "type": "string",
                            "description": "Claim Status",
                            "enum": [
                              "OPEN",
                              "WAITING_RESOLUTION",
                              "CONFIRMED",
                              "CANCELLED",
                              "DONE"
                            ],
                            "example": "WAITING_RESOLUTION"
                          },
                          "confirmation_reason": {
                            "type": "string",
                            "description": "Confirmation reason",
                            "enum": [
                              "CUSTOMER_REQUEST",
                              "ENDING_ACCOUNT",
                              "FRAUD",
                              "ANSWER_DEFAULT"
                            ],
                            "example": "CUSTOMER_REQUEST"
                          },
                          "cancellation_reason": {
                            "type": "string",
                            "description": "Cancellation reason",
                            "enum": [
                              "CUSTOMER_REQUEST",
                              "ENDING_ACCOUNT",
                              "FRAUD",
                              "ANSWER_DEFAULT",
                              "RECONCILIATION"
                            ],
                            "example": "CUSTOMER_REQUEST"
                          },
                          "cancelled_by": {
                            "type": "string",
                            "description": "Cancelled by",
                            "enum": [
                              "CLAIMER",
                              "GRANTOR"
                            ],
                            "example": "CLAIMER"
                          },
                          "resolved_at": {
                            "type": "string",
                            "description": "Resolution date",
                            "example": "2021-12-01T19:15:11.006Z"
                          },
                          "concluded_at": {
                            "type": "string",
                            "description": "Conclusion date",
                            "example": "2021-12-01T19:15:11.006Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Last updated date",
                            "example": "2021-12-01T19:15:11.006Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound, KeyNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Application product not found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "APPLICATION_PRODUCT_NOT_FOUND",
                          "enum": [
                            "APPLICATION_PRODUCT_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Product not found for given application id."
                        }
                      }
                    },
                    {
                      "title": "Key Not Found",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "KEY_NOT_FOUND",
                          "enum": [
                            "KEY_NOT_FOUND"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Key not found."
                        },
                        "status_code": {
                          "type": "number",
                          "description": "Error status code",
                          "example": "404"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  },
                  "Example 2 - KeyNotFound": {
                    "value": {
                      "code": "KEY_NOT_FOUND",
                      "message": "The provided key is not found or does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix/claims/{id}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get a claim by id",
        "description": "Get a claim for a specific id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the claim to get.",
            "example": "4af9af0f-4935-454e-b3ee-af5b9d85c914"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get claim",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reason",
                    "participation_flow",
                    "key",
                    "kind",
                    "ispb",
                    "account_type",
                    "account_number",
                    "account_opening_date",
                    "document_type",
                    "document_number",
                    "ispb_grantor",
                    "claim_id",
                    "status",
                    "resolved_at",
                    "updated_at"
                  ],
                  "properties": {
                    "reason": {
                      "type": "string",
                      "description": "Claim reason type",
                      "example": "PORTABILITY",
                      "enum": [
                        "PORTABILITY",
                        "OWNERSHIP"
                      ]
                    },
                    "participation_flow": {
                      "type": "string",
                      "description": "Date and time of inclusion",
                      "example": "CLAIMER",
                      "enum": [
                        "CLAIMER",
                        "GRANTOR"
                      ]
                    },
                    "key": {
                      "type": "string",
                      "description": "Pix key identifier",
                      "example": "+5547989991111"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind of the key",
                      "enum": [
                        "CPF",
                        "CNPJ",
                        "EMAIL",
                        "CELLPHONE"
                      ],
                      "example": "CPF"
                    },
                    "ispb": {
                      "type": "number",
                      "description": "ISPB number",
                      "example": 11476673
                    },
                    "agency_number": {
                      "type": "number",
                      "description": "Owner's agency number",
                      "example": 31
                    },
                    "account_type": {
                      "type": "string",
                      "description": "Owner's account type",
                      "enum": [
                        "CHECKING_ACCOUNT",
                        "SALARY_ACCOUNT",
                        "SAVINGS_ACCOUNT",
                        "PAYMENT_ACCOUNT"
                      ],
                      "example": "CHECKING_ACCOUNT"
                    },
                    "account_number": {
                      "type": "number",
                      "description": "Owner's account number",
                      "example": 3201
                    },
                    "account_opening_date": {
                      "type": "number",
                      "description": "Account opening date",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "document_type": {
                      "type": "string",
                      "description": "Owner's document type",
                      "enum": [
                        "CPF",
                        "CNPJ"
                      ],
                      "example": "CPF"
                    },
                    "document_number": {
                      "type": "string",
                      "description": "Owner's document number",
                      "example": "24093302073"
                    },
                    "ispb_grantor": {
                      "type": "number",
                      "description": "ISPB grantor number",
                      "example": 114761213
                    },
                    "grantor": {
                      "type": "object",
                      "properties": {
                        "agency_number": {
                          "type": "number",
                          "description": "Owner's agency number",
                          "example": 34
                        },
                        "account_type": {
                          "type": "string",
                          "description": "Owner's account type",
                          "enum": [
                            "CHECKING_ACCOUNT",
                            "SALARY_ACCOUNT",
                            "SAVINGS_ACCOUNT",
                            "PAYMENT_ACCOUNT"
                          ],
                          "example": "SAVINGS_ACCOUNT"
                        },
                        "account_number": {
                          "type": "number",
                          "description": "Owner's account number",
                          "example": 91092
                        },
                        "account_opening_date": {
                          "type": "number",
                          "description": "Account opening date",
                          "example": "2021-07-23T16:58:27.000Z"
                        },
                        "document_type": {
                          "type": "string",
                          "description": "Owner's document type",
                          "enum": [
                            "CPF",
                            "CNPJ"
                          ],
                          "example": "CPF"
                        },
                        "document_number": {
                          "type": "string",
                          "description": "Owner's document number",
                          "example": "39033905000"
                        },
                        "name": {
                          "type": "string",
                          "description": "Owner's name",
                          "example": "Name"
                        },
                        "nickname": {
                          "type": "string",
                          "description": "Owner's nickname",
                          "example": "Nick Name"
                        },
                        "notified_at": {
                          "type": "string",
                          "description": "When grantor was notified.",
                          "example": "2021-07-23T16:58:27.000Z"
                        }
                      }
                    },
                    "claim_id": {
                      "type": "string",
                      "description": "Id of claim",
                      "example": "72e605d3-1f84-4384-b7f6-9c3c1f9e224d"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of claim",
                      "enum": [
                        "OPEN",
                        "WAITING_RESOLUTION",
                        "CONFIRMED",
                        "CANCELED",
                        "DONE"
                      ],
                      "example": "OPEN"
                    },
                    "confirmation_reason": {
                      "type": "string",
                      "description": "Reason for confirmation",
                      "enum": [
                        "CUSTOMER_REQUEST",
                        "ENDING_ACCOUNT",
                        "FRAUD",
                        "ANSWER_DEFAULT"
                      ],
                      "example": "CUSTOMER_REQUEST"
                    },
                    "cancellation_reason": {
                      "type": "string",
                      "description": "Reason for cancellation",
                      "enum": [
                        "CUSTOMER_REQUEST",
                        "ENDING_ACCOUNT",
                        "FRAUD",
                        "ANSWER_DEFAULT",
                        "RECONCILIATION"
                      ],
                      "example": "FRAUD"
                    },
                    "cancelled_by": {
                      "type": "string",
                      "description": "Canceled by",
                      "enum": [
                        "GRANTOR",
                        "CLAIMER"
                      ],
                      "example": "GRANTOR"
                    },
                    "resolved_at": {
                      "type": "string",
                      "description": "Claim resolved date",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "concluded_at": {
                      "type": "string",
                      "description": "Claim conclusion date;",
                      "example": "2021-07-23T16:58:27.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Claim modified date",
                      "example": "2021-07-23T16:58:27.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Application product not found",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "APPLICATION_PRODUCT_NOT_FOUND",
                      "enum": [
                        "APPLICATION_PRODUCT_NOT_FOUND"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Product not found for given application id."
                    }
                  }
                },
                "examples": {
                  "Example 1 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix/check-keys": {
      "post": {
        "tags": [
          "Keys"
        ],
        "summary": "Check for pix keys",
        "description": "Returns key verification result",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Describes the properties.",
                "required": [
                  "keys"
                ],
                "properties": {
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Pix keys",
                    "example": [
                      "+5547989991111"
                    ]
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "keys": [
                      "+556584811516",
                      "example@email.com"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification result.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Describes the properties of key verification.",
                  "required": [
                    "keys"
                  ],
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "description": "ID for suport",
                      "example": "r29b389283r98h12echuhy23r48u23"
                    },
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "+556584811516"
                          },
                          "exists": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error with types [ValidationFailed].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid request data",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Invalid request data."
                    },
                    "details": {
                      "type": "array",
                      "title": "Error details",
                      "description": "Informs error details",
                      "example": "Invalid request data."
                    }
                  }
                },
                "examples": {
                  "Example 1 - ValidationFailed": {
                    "value": {
                      "code": "VALIDATION_FAILED",
                      "message": "Invalid request data."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error with types [AuthenticationError].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Authentication error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "AUTHENTICATION_FAILED",
                      "enum": [
                        "AUTHENTICATION_FAILED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Authentication failed."
                    }
                  }
                },
                "examples": {
                  "Example 1 - AuthenticationError": {
                    "value": {
                      "code": "AUTHENTICATION_FAILED",
                      "message": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error with types [MissingProduct].",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing Product Permission",
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Error code",
                          "description": "The type of error",
                          "example": "MISSING_PRODUCT_PERMISSION",
                          "enum": [
                            "MISSING_PRODUCT_PERMISSION"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "title": "Error message",
                          "description": "Describes a message informing a reason for the error",
                          "example": "Missing product permission."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1 - MissingProductError": {
                    "value": {
                      "code": "MISSING_PRODUCT_PERMISSION",
                      "message": "Missing product permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error with types [ApplicationProductNotFound].",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Application product not found",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "APPLICATION_PRODUCT_NOT_FOUND",
                      "enum": [
                        "APPLICATION_PRODUCT_NOT_FOUND"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Product not found for given application id."
                    }
                  }
                },
                "examples": {
                  "Example 2 - ApplicationNotFound": {
                    "value": {
                      "code": "APPLICATION_PRODUCT_NOT_FOUND",
                      "message": "Product not found for given application id."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error with internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Internal Server Error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "title": "Error code",
                      "description": "The type of error",
                      "example": "INTERNAL_SERVER_ERROR",
                      "enum": [
                        "INTERNAL_SERVER_ERROR"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "title": "Error message",
                      "description": "Describes a message informing a reason for the error",
                      "example": "Unexpected error with our service"
                    }
                  }
                },
                "examples": {
                  "Example 1 - InternalServerError": {
                    "value": {
                      "code": "INTERNAL_SERVER_ERROR",
                      "message": "Unexpected error with our service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "description": "Bearer auth (https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)."
      }
    }
  }
}
